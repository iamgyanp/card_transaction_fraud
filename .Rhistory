install.packages("fPortfolio")
?fPortfolio
?fportfolio
??fPortfolio
library(ggplot2)
library(dplyr)
library(ggmap)
install.packages("ggmap")
map_data
states_map = map_data()
states_map = map_data("state")
View(states_map)
View(states_map)
ggplot(states_map, aes(x = long, y = lat)) +
geom_point()
ggplot(states_map, aes(x = long, y = lat)) +
geom_polygpn()
ggplot(states_map, aes(x = long, y = lat)) +
geom_polygon()
View(states_map)
View(states_map)
ggplot(states_map, aes(x = long, y = lat, group = group)) +
geom_polygon()
ggplot(states_map, aes(x = long, y = lat, group = group)) +
geom_polygon()
ggplot(states_map, aes(x = long, y = lat, group = group)) +
geom_polygon(fill = "white", color = "black")
ggplot(states_map, aes(x = long, y = lat, group = group)) +
geom_polygon()
ggplot(states_map, aes(x = long, y = lat, group = group)) +
geom_polygon(fill = "white", color = "black")
world_data = map_data("world")
ggplot(world_data, (aes(x = long, y = lat, group = group)) +
geom_polygon()
ggplot(world_data, (aes(x = long, y = lat, group = group)) +
geom_polygon()
ggplot(world_data, (aes(x = long, y = lat, group = group))) +
geom_polygon()
View(world_data)
data = world_data
data %>%
filter(region == "India") %>%
ggplot((aes(x = long, y = lat, group = group))) +
geom_polygon()
data %>%
filter(region == "Taiwan") %>%
ggplot((aes(x = long, y = lat, group = group))) +
geom_polygon()
data %>%
filter(region == "China") %>%
ggplot((aes(x = long, y = lat, group = group))) +
geom_polygon()
data %>%
filter(region == "India") %>%
ggplot((aes(x = long, y = lat, group = group))) +
geom_polygon()
data %>%
filter(region == c("Taiwan", "Japan", "South Korea", "North Korea", "China")) %>%
ggplot((aes(x = long, y = lat, group = group))) +
geom_polygon()
data %>%
filter(region = "India") %>%
ggplot((aes(x = long, y = lat, group = group))) +
geom_polygon()
data %>%
filter(region == "India") %>%
ggplot((aes(x = long, y = lat, group = group))) +
geom_polygon()
data %>%
filter(region = c("Taiwan", "Japan", "South Korea", "North Korea", "China")) %>%
ggplot((aes(x = long, y = lat, group = group))) +
geom_polygon()
data %>%
filter(region = c("Taiwan", "Japan", "South Korea", "North Korea", "China")) %>%
ggplot((aes(x = long, y = lat, group = group))) +
geom_polygon()
data %>%
filter(region == c("Taiwan", "Japan", "South Korea", "North Korea", "China")) %>%
ggplot((aes(x = long, y = lat, group = group))) +
geom_polygon()
east_data = map_data(map = "world",
region = c("Taiwan",
"Japan",
"South Korea",
"North Korea",
"China"))
ggplot(east_data, (aes(x = long, y = lat, group = group))) +
geom_polygon()
data %>%
filter(region == "India") %>%
ggplot((aes(x = long, y = lat, group = group))) +
geom_polygon()
ggplot(east_data, (aes(x = long, y = lat, group = group))) +
geom_polygon()
data %>%
filter(region == c("Taiwan", "Japan", "South Korea", "North Korea", "China")) %>%
ggplot((aes(x = long, y = lat, group = group))) +
geom_polygon()
crime_data
crime_data = USArrests
states = map_data("state")
crime_data = states %>%
crime_data = states %>%
mutate(state = rownames(crime_data))
crime_data = crime_data %>%
mutate(state = rownames(crime_data))
View(crime_data)
View(crime_data)
crime_map = full_join(states, crime_data, by = c("region", "state"))
crime_map = full_join(states, crime_data, by = c("region" = "state"))
View(crime_map)
tolower("shD")
toupper("dfD")
tolower("californiA")
toupper("califORnia")
crime_data = crime_data %>%
mutate(state = tolower(state))
crime_map = full_join(states, crime_data, by = c("region" = "state"))
View(crime_map)
ggplot(crime_map, (aes(x = long, y = lat, group = group))) +
geom_polygon()
ggplot(crime_map, (aes(x = long, y = lat, group = group)) +
geom_polygon()
ggplot(crime_map, (aes(x = long, y = lat, group = group))) +
geom_polygon()
)
ggplot(crime_map, aes(x = long, y = lat, group = group)) +
geom_polygon()
ggplot(crime_map, aes(x = long, y = lat,
group = group,
fill = Assault)) +
geom_polygon()
ggplot(crime_map, aes(x = long, y = lat,
group = group,
fill = Assault)) +
geom_polygon() +
scale_fill_continuous(low = "white", high = "red")
ggplot(crime_map, aes(x = long, y = lat,
group = group,
fill = Assault)) +
geom_polygon() +
scale_fill_continuous(low = "white", high = "darkred")
ggplot(crime_map, aes(x = long, y = lat,
group = group,
fill = Assault)) +
geom_polygon() +
scale_fill_continuous(low = "white", high = "darkred") +
them
ggplot(crime_map, aes(x = long, y = lat,
group = group,
fill = Assault)) +
geom_polygon() +
scale_fill_continuous(low = "white", high = "darkred") +
theme_classic()
ggplot(crime_map, aes(x = long, y = lat,
group = group,
fill = Assault)) +
geom_polygon() +
scale_fill_continuous(low = "white", high = "darkred") +
theme_linedraw()
ggplot(crime_map, aes(x = long, y = lat,
group = group,
fill = Assault)) +
geom_polygon() +
scale_fill_continuous(low = "white", high = "darkred") +
theme_light()
ggplot(crime_map, aes(x = long, y = lat,
group = group,
fill = Assault)) +
geom_polygon() +
scale_fill_continuous(low = "white", high = "darkred") +
theme_void()
ggplot(crime_map, aes(x = long, y = lat,
group = group,
fill = Assault)) +
geom_polygon() +
scale_fill_continuous(low = "white", high = "darkred") +
theme_classic()
ggplot(crime_map, aes(x = long, y = lat,
group = group,
fill = Assault)) +
geom_polygon() +
scale_fill_continuous(low = "white", high = "darkred") +
theme_void()
ggplot(crime_map, aes(x = long, y = lat,
group = group,
fill = Assault)) +
geom_polygon() +
scale_fill_continuous(low = "white", high = "darkred") +
theme_light()
ggplot(crime_map, aes(x = long, y = lat,
group = group,
fill = Assault)) +
geom_polygon() +
scale_fill_continuous(low = "white", high = "darkred") +
theme_dark()
ggplot(crime_map, aes(x = long, y = lat,
group = group,
fill = Assault)) +
geom_polygon() +
scale_fill_continuous(low = "white", high = "darkred") +
theme_bw()
USC = get_map("University of Southern California")
USC = get_map("University of Southern California")
library(ggplot2)
library(dplyr)
library(ggmap)
USC = get_map("University of Southern California")
ggmap(USC, zoom = 20)
USC = get_map("University of Southern California", zoom = 14)
ggmap(USC, zoom = 20)
ggmap(USC, zoom = 50)
ggmap(USC)
USC = get_map("University of Southern California", zoom = 50)
ggmap(USC)
USC = get_map("University of Southern California", zoom = 15)
ggmap(USC)
USC = get_map("Trader Joe's", zoom = 15)
ggmap(USC)
USC = get_map("NCTU", zoom = 15)
ggmap(USC)
USC = get_map("University of Southern California", zoom = 15)
ggmap(USC)
KGP = get_map("IITKGP", zoom = 15)
ggmap(KGP)
KGP = get_map("IITKGP", zoom = 17)
ggmap(KGP)
KGP = get_map("IITKGP", zoom = 14)
ggmap(KGP)
install.packages("devtools")
USC = get_map("University of Southern California", zoom = 15,
maptype maptype = terrain)
USC = get_map("University of Southern California", zoom = 15,
maptype maptype = terrain)
USC = get_map("University of Southern California", zoom = 15,
maptype = terrain)
USC = get_map("University of Southern California", zoom = 15,
maptype = "terrain")
ggmap(USC)
USC = get_map("University of Southern California", zoom = 15,
maptype = "terrain")
ggmap(USC)
USC = get_map("University of Southern California", zoom = 15,
maptype = "satellite")
ggmap(USC)
USC = get_map("University of Southern California", zoom = 15,
maptype = "roadmap")
ggmap(USC)
USC = get_map("University of Southern California", zoom = 15,
maptype = "hydrid")
USC = get_map("University of Southern California", zoom = 15,
maptype = "hybrid")
ggmap(USC)
?get_map
geocode("University of Southern California")
geocode("1369 W 37th St, LA")
revgeocode(-77.03653, 38.89768)
revgeocode(c(-77.03653, 38.89768))
h_map = get_map("Houston", zoom = 14, color = "bw")
ggmap(h_map)
dt_crimes = filter(crime, lon >= 95.39681 & lon <= 95.34188 &
lat >= 29.73631 & lat <= 29.78400)
dt_crimes = filter(crime, lon >= -95.39681 & lon <= -95.34188 &
lat >= 29.73631 & lat <= 29.78400)
violent_crimes = filter(dt_crimes,
offense %in% c("aggravated assault",
"murder", "rape", "robbery"))
h_map +
geom_point(violent_crimes, aes(x = lon, y = lat, color = offense)
h_map +
geom_point(violent_crimes, aes(x = lon, y = lat, color = offense))
ggmap(hmap) +
geom_point(violent_crimes, aes(x = lon, y = lat, color = offense))
ggmap(h_map)+
geom_point(violent_crimes, aes(x = lon, y = lat, color = offense))
ggmap(h_map) +
geom_point(violent_crimes, aes(x = lon, y = lat, color = offense))
ggmap(h_map) +
geom_point(violent_crimes, aes(x = lon, y = lat,
color = offense,
size = offense))
ggmap(h_map) +
geom_point(data = violent_crimes, aes(x = lon, y = lat,
color = offense,
size = offense))
ggmap(h_map) +
geom_point(data = violent_crimes, aes(x = lon, y = lat,
color = offense))
ggmap(h_map) +
stat_density2d(violent_crimes,
aes(x= lon, y = lat,
fill = ..level..,
alpha= ..level..),
geom = "polygon") +
scale_fill_gradient(low = "white", high = "darkred") +
facet_wrap(~day)
ggmap(h_map) +
stat_density2d(data = violent_crimes,
aes(x= lon, y = lat,
fill = ..level..,
alpha= ..level..),
geom = "polygon") +
scale_fill_gradient(low = "white", high = "darkred") +
facet_wrap(~day)
ggmap(h_map) +
stat_density2d(data = violent_crimes,
aes(x= lon, y = lat,
fill = ..level..,
alpha= ..level..),
geom = "polygon") +
scale_fill_gradient(low = "white", high = "darkred") +
facet_wrap(~day, nrow=2)+
theme(legend.position = 'none')
install.packages("ISLR")
library(ISLR)
ISLR?
ISLR
?ISLR
??ISLR
library(ISLR)
install.packages("caret")
install.packages("e1071")
install.packages("randomForest")
install.packages("keras")
install.packages("ROCR")
install.packages("leaps")
library(ISLR)
library(ISLR)
library(leaps)
install.packages("glmnet")
library(glmnet)
```{r warning = FALSE, message = FALSE}
library(ISLR)
library(leaps)
library(glmnet)
install.packages("xgboost")
install.packages("data.table")
library(data.table)
library(data.table)
library(data.table)
library(data.table)
library(data.table)
remove(crime_data)
remove(crime_map)
remove(data)
remove(dt_crimes)
remove(east_data)
remove(states)
remove(states_map)
remove(violent_crimes)
remove(world_data)
remove(KGP)
remove(USC)
remove(h_map)
886/1239
180/263
231/338
data %>% filter(label==2) %>% count(Fraud)
data %>% filter(label==2) %>% arrange(-`Bootstrap Forest (n = 150)`) %>% slice(1:round(.02*nrow(data[,"label"==2]))) %>% count(Fraud)
#Models
library(readxl)
data = read_excel('All Models.xlsx')
setwd("C:/Users/Gyan Prakash/OneDrive - USC Marshall School of Business/Spring 2018/DSO 562/Project 3")
data = read_excel('All Models.xlsx')
data %>% filter(label==2) %>% arrange(-`Bootstrap Forest (n = 150)`) %>% slice(1:round(.02*nrow(data[,"label"==2]))) %>% count(Fraud)
data %>% filter(label==2) %>% arrange(-`Bootstrap Forest (n = 150)`) %>% slice(1:round(.02*nrow(data[,"label"==2]))) %>% count(Fraud)
library(dplyr)
data %>% filter(label==2) %>% arrange(-`Bootstrap Forest (n = 150)`) %>% slice(1:round(.02*nrow(data[,"label"==2]))) %>% count(Fraud)
data %>% filter(label==2) %>% count(Fraud)
12587*.02
data %>% filter(label==2) %>% arrange(-`Bootstrap Forest (n = 150)`) %>% slice(1:round(.02*nrow(data[data$label"==2,]))) %>% count(Fraud)
data %>% filter(label==2) %>% arrange(-`Bootstrap Forest (n = 150)`) %>% slice(1:round(.02*nrow(data[data$label==2,]))) %>% count(Fraud)
data %>% filter(label==2) %>% arrange(-`Bootstrap Forest (n = 150)`) %>% slice(1:round(.02*nrow(data[data$label==2,]))) %>% count(Fraud)
data %>% filter(label==2) %>% count(Fraud)
177/338
data %>% filter(label==1) %>% arrange(-`Bootstrap Forest (n = 150)`) %>% slice(1:round(.02*nrow(data[data$label==1,]))) %>% count(Fraud)
data %>% filter(label==1) %>% count(Fraud)
155/263
data %>% filter(label==0) %>% arrange(-`Bootstrap Forest (n = 150)`) %>% slice(1:round(.02*nrow(data[data$label==0,]))) %>% count(Fraud)
data %>% filter(label==0) %>% count(Fraud)
262/1239
177/338
155/263
data %>% filter(label==0) %>% arrange(-`Bootstrap Forest (n = 150)`) %>% slice(1:round(.02*nrow(data[data$label==0,]))) %>% count(Fraud)
data %>% filter(label==0) %>% count(Fraud)
518/(1014-338-263)
data %>% filter(label==0) %>% arrange(-`Naive Prob 1`) %>% slice(1:round(.02*nrow(data[,"label"==0]))) %>% count(Fraud)
518/1239
data %>% filter(label==0) %>% count(Fraud)
96708/1014
518/((1239+12390)*(1014/96708))
data %>% filter(label==0) %>% arrange(-`Naive Prob 1`) %>% slice(1:round(.02*nrow(data[,"label"==0]))) %>% count(Fraud)
data %>% filter(label==0) %>% count(Fraud)
1014/96708
1014-338-263
518/1239
data %>% filter(label==0) %>% arrange(-`Bootstrap Forest (n = 150)`) %>% slice(1:round(.02*nrow(data[data$label==0,]))) %>% count(Fraud)
data %>% filter(label==0) %>% count(Fraud)
262/413
library(ISLR)
library(dplyr)
data = read.csv("with_genre_rating.csv")
data$total_gross = as.numeric(gsub('[$,]', '', data$total_gross))
data$domestic_gross = as.numeric(gsub('[$,]', '', data$domestic_gross))
data$international_gross = as.numeric(gsub('[$,]', '', data$international_gross))
data$budget = as.numeric(gsub('[$,]', '', data$budget))
data$gross_profit = data$total_gross - data$budget
data = na.omit(data)
lm.fit = lm(formula = gross_profit ~ Action + Adventure + Biography + Comedy + Crime + Documentary + Drama + Family + Fantasy + History + Horror + Music + Musical + Mystery + Romance + Sci.Fi + Short + Sport + Talk.Show + Thriller + War + Western, data = data)
round(summary(lm.fit)$r.squared, digits = 4)
summary(lm.fit)
library(ISLR)
library(dplyr)
